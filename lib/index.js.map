{"version":3,"file":"index.js","sources":["../src/core-graphic/Size.ts","../src/core-graphic/Point.ts","../src/core-graphic/Frame.ts"],"sourcesContent":["export default class Size {\n    width = 0\n    height = 0\n\n    constructor(\n        params: Partial<{ width: number; height: number; size: Size }>\n    ) {\n        const { width, height, size } = params\n        if (size) {\n            this.width = size.width || 0\n            this.height = size.height || 0\n        } else {\n            this.width = !isNaN(width) ? width : 0\n            this.height = !isNaN(height) ? height : 0\n        }\n    }\n\n    static cloneDeep(size: Size): Size {\n        return new Size({ width: size.width, height: size.height })\n    }\n\n    cloneDeep(): Size {\n        return Size.cloneDeep(this)\n    }\n\n    static get zero() {\n        return new Size({ width: 0, height: 0 })\n    }\n\n    static isEqual(sizeA: Size, sizeB: Size): boolean {\n        return sizeA.width == sizeB.width && sizeA.height == sizeB.height\n    }\n\n    isEqual(size: Size) {\n        return Size.isEqual(this, size)\n    }\n\n    get isZero(): boolean {\n        return Size.isEqual(this, Size.zero)\n    }\n}\n","export default class Point {\n    x = 0\n    y = 0\n\n    constructor(x: number, y: number) {\n        this.x = !isNaN(x) ? x : 0\n        this.y = !isNaN(y) ? y : 0\n    }\n\n    static get zero(): Point {\n        return new Point(0, 0)\n    }\n\n    static isEqual(pointA: Point, pointB: Point): boolean {\n        return pointA.x == pointB.x && pointA.y == pointB.y\n    }\n\n    isEqual(point: Point) {\n        return Point.isEqual(this, point)\n    }\n\n    static deepClone(point: Point): Point {\n        return new Point(point.x, point.y)\n    }\n\n    deepClone(): Point {\n        return Point.deepClone(this)\n    }\n\n    private static operator(op: string, a: Point, b: Point): Point {\n        switch (op) {\n            case \"-\":\n                return new Point(a.x - b.x, a.y - b.y)\n            case \"+\":\n                return new Point(a.x + b.x, a.y + b.y)\n            default:\n                return Point.zero\n        }\n    }\n\n    static minus(a: Point, b: Point): Point {\n        return this.operator(\"-\", a, b)\n    }\n\n    static plus(a: Point, b: Point): Point {\n        return this.operator(\"+\", a, b)\n    }\n\n    get isZero(): boolean {\n        return Point.isEqual(this, Point.zero)\n    }\n}\n","import Size from \"@core-graphic/Size\"\nimport Point from \"@core-graphic/Point\"\n\nexport default class Frame {\n    x = 0\n    y = 0\n    width = 0\n    height = 0\n\n    constructor(\n        params: Partial<{\n            x: number\n            y: number\n            width: number\n            height: number\n            point: Point\n            size: Size\n        }>\n    ) {\n        const { x, y, width, height, point, size } = params\n        if (point) {\n            this.x = point.x || 0\n            this.y = point.y || 0\n        } else {\n            this.x = !isNaN(x) ? x : 0\n            this.y = !isNaN(y) ? y : 0\n        }\n\n        if (size) {\n            this.width = size.width || 0\n            this.height = size.height || 0\n        } else {\n            this.width = !isNaN(width) ? width : 0\n            this.height = !isNaN(height) ? height : 0\n        }\n    }\n\n    static get zero(): Frame {\n        return new Frame({ x: 0, y: 0, width: 0, height: 0 })\n    }\n\n    get centerX(): number {\n        return this.x + (this.width >> 1)\n    }\n\n    get centerY(): number {\n        return this.y + (this.height >> 1)\n    }\n\n    get maxX(): number {\n        return this.x + this.width\n    }\n\n    get maxY(): number {\n        return this.y + this.height\n    }\n\n    get origin(): Point {\n        const point = new Point(this.x, this.y)\n        return point\n    }\n\n    set origin(value: Point) {\n        this.x = value.x\n        this.y = value.y\n    }\n\n    get size(): Size {\n        const size = new Size({ width: this.width, height: this.height })\n        return size\n    }\n\n    set size(value: Size) {\n        this.width = value.width\n        this.height = value.height\n    }\n\n    get isZero(): boolean {\n        return Frame.isEqual(this, Frame.zero)\n    }\n\n    static cloneDeep(frame: Frame): Frame {\n        return new Frame({\n            x: frame.x,\n            y: frame.y,\n            width: frame.width,\n            height: frame.height\n        })\n    }\n\n    cloneDeep(): Frame {\n        return Frame.cloneDeep(this)\n    }\n\n    // utilities\n\n    isEqual(frame: Frame): boolean {\n        return Frame.isEqual(this, frame)\n    }\n    static isEqual(frameA: Frame, frameB: Frame): boolean {\n        return (\n            frameA.x == frameB.x &&\n            frameA.y == frameB.y &&\n            frameA.width == frameB.width &&\n            frameA.height == frameB.height\n        )\n    }\n\n    intersect(frame: Frame): boolean {\n        return Frame.intersect(this, frame)\n    }\n\n    static intersect(frameA: Frame, frameB: Frame) {\n        let h =\n            (frameA.x <= frameB.x && frameB.x <= frameA.maxX) ||\n            (frameA.x <= frameB.maxX && frameB.maxX <= frameA.maxX) ||\n            (frameA.x >= frameB.x && frameB.maxX >= frameA.maxX)\n        let v =\n            (frameA.y <= frameB.y && frameB.y <= frameA.maxY) ||\n            (frameA.y <= frameB.maxY && frameB.maxY <= frameA.maxY) ||\n            (frameA.y >= frameB.y && frameB.maxY >= frameA.maxY)\n        return h && v\n    }\n}\n"],"names":[],"mappings":"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"}